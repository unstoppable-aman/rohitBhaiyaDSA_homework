Find the smallest missing element from a sorted array

Given a sorted array of non-negative distinct integers, find the smallest missing non-negative element in it.

For example,

Input:  nums[] = [0, 1, 2, 6, 9, 11, 15]
Output: The smallest missing element is 3
 
 
Input:  nums[] = [1, 2, 3, 4, 6, 9, 11, 15]
Output: The smallest missing element is 0
 
 
Input:  nums[] = [0, 1, 2, 3, 4, 5, 6]
Output: The smallest missing element is 7


*******************************************************SOLUTION***********************************************************

	int findSmallestMissingNumber(vector<int> const &nums)
	{
		int start=0,end=nums.size()-1,mid;
		while(start<=end)
		{
			mid=end+(start-end)/2;
			if(nums[mid]==mid)
				start=mid+1;
			else 
				end=mid-1;
		}
		return start;
	}
